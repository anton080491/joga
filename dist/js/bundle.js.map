{"version":3,"sources":["webpack://joga-js-learning/./src/js/parts/blocksOverflow.js","webpack://joga-js-learning/./src/js/parts/calkulator.js","webpack://joga-js-learning/./src/js/parts/forms.js","webpack://joga-js-learning/./src/js/parts/slider.js","webpack://joga-js-learning/./src/js/parts/tabs.js","webpack://joga-js-learning/./src/js/parts/timer.js","webpack://joga-js-learning/webpack/bootstrap","webpack://joga-js-learning/./src/js/script.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;;AAEA,0B;;;;;;;;;;AClCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA,6BAA6B;AAC7B,0CAA0C;;AAE1C,+BAA+B;AAC/B;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA,0EAA0E;AAC1E;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjDA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD,0CAA0C;;AAE1C,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;;;;AAIA,kEAAkE;AAClE;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET,uBAAuB,kBAAkB,OAAO;AAChD;AACA;;;AAGA,KAAK;AACL;;AAEA;;;;;;;;;;;;AAYA;;AAEA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;;AAErD,yCAAyC;;AAEzC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA,YAAY;AACZ;AACA,QAAQ;AACR;;AAEA;AACA,sBAAsB,kBAAkB,OAAO;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA,IAAI;;;;;;;;;;;;AAYJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA,uDAAuD;AACvD,oDAAoD;AACpD,YAAY;AACZ;AACA;AACA,QAAQ;;AAER,IAAI;;;;;;;;;;;;;AC3JJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;;AAE3B;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA,8DAA8D;AAC9D,0BAA0B,mBAAmB;AAC7C;AACA;AACA,oEAAoE;;AAEpE,uDAAuD;AACvD,yDAAyD;AACzD;;AAEA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;;;;;;;;AASL,yDAAyD;AACzD,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,wB;;;;;;;;;;AC7CA;AACA;;;AAGA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yB;;;;;;UC1DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;;AAEA;;AAEA,iBAAiB,mBAAO,CAAC,gEAAwB;AACjD,qBAAqB,mBAAO,CAAC,wDAAoB;AACjD,gBAAgB,mBAAO,CAAC,8CAAe;AACvC,iBAAiB,mBAAO,CAAC,gDAAgB;AACzC,eAAe,mBAAO,CAAC,4CAAc;AACrC,gBAAgB,mBAAO,CAAC,8CAAe;AACvC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA,CAAC,E","file":"bundle.js","sourcesContent":["//                       Создаем всплывающий окна\r\n\r\nfunction blocks() {\r\n   let more = document.querySelector('.more'),\r\n      popup = document.querySelector('.overlay'),\r\n      close = document.querySelector('.popup-close'),\r\n      about = document.getElementById('about'),\r\n      descriptionBtn = document.querySelectorAll('.description-btn');\r\n\r\n   more.addEventListener('click', function () {\r\n      popup.style.display = 'block';\r\n      document.body.style.overflow = 'hidden'; //не дает двигаться скроллингу при открытом этом окне\r\n   });\r\n\r\n   close.addEventListener('click', function () {\r\n      popup.style.display = 'none';\r\n      document.body.style.overflow = '';\r\n   });\r\n\r\n   // about.addEventListener('click', function (event) {\r\n   //     if (event.target && event.target.classList.contains('description-btn')) {\r\n   //         popup.style.display = 'block';\r\n   //         document.body.style.overflow = 'hidden';\r\n   //     }\r\n   // });\r\n\r\n   descriptionBtn.forEach(function (Item) {\r\n      Item.addEventListener('click', function () {\r\n         popup.style.display = 'block';\r\n         document.body.style.overflow = 'hidden';\r\n      });\r\n   });\r\n}\r\n\r\nmodule.exports = (blocks);","function calkulator(){\r\n// Calc\r\n\r\nlet persons = document.querySelectorAll('.counter-block-input')[0],\r\n    restDays = document.querySelectorAll('.counter-block-input')[1],\r\n    place = document.getElementById('select'), // выбираем определенное из списка\r\n    totalValue = document.getElementById('total'),\r\n    personsSum = 0, // устанавливаем начальные значения для каждого инпута\r\n    daysSum = 0,\r\n    total = 0;\r\n\r\ntotalValue.innerHTML = 0; // вместо того что в верстке ставим 0\r\n\r\npersons.addEventListener('input', function () {\r\n    personsSum = +this.value; // добавляем значение что ввел пользователь в persons\r\n    total = (daysSum + personsSum) * 4000; // формулу как считать total дает заказчик\r\n\r\n    if (restDays.value == '') { // пишем условие пир котором все инпуты должны быть заполнены\r\n        totalValue.innerHTML = 0;\r\n    } else {\r\n        totalValue.innerHTML = total;\r\n    }\r\n});\r\n\r\nrestDays.addEventListener('input', function () {\r\n    daysSum = +this.value;\r\n    total = (daysSum * (personsSum * 4000));\r\n\r\n    if (persons.value == '') {\r\n        totalValue.innerHTML = 0;\r\n    } else {\r\n        totalValue.innerHTML = total;\r\n    }\r\n});\r\n\r\nplace.addEventListener('change', function () {\r\n    if (restDays.value == '' || persons.value == '') {\r\n        totalValue.innerHTML = 0;\r\n    } else {\r\n        let a = total;\r\n        totalValue.innerHTML = a * this.options[this.selectedIndex].value; // наш total умножается на индекс выбраного значения из списка\r\n    }\r\n});\r\n\r\nif (restDays.value == '' || persons.value == '') {\r\n    totalValue.innerHTML = 0;\r\n}\r\n}\r\n\r\nmodule.exports = (calkulator);\r\n\r\n","function forms() {\r\n    // FORMS    \r\n\r\n    let messages = { // пишем все сообщения в объект\r\n        loading: 'Загрузка',\r\n        seccuss: 'Спасибо!',\r\n        failer: 'Произошла ошибка'\r\n    };\r\n\r\n    let form = document.querySelector('.main-form'), // находим наши формы и инпуты\r\n        input = form.getElementsByTagName('input'),\r\n        statusMessage = document.createElement('div'); //Создаем div для выода сообщений\r\n\r\n    statusMessage.classList.add('status'); // присваиваем новому div класс\r\n\r\n    form.addEventListener('submit', function (event) { //отпраавляем что то с формы\r\n        event.preventDefault();\r\n        form.appendChild(statusMessage);\r\n\r\n        let request = new XMLHttpRequest();\r\n        request.open('POST', '/server.php');\r\n        request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n        // Для отправки в JSON формате\r\n        // request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n\r\n        let formData = new FormData(form); // оглашаем переменную и помещаем туда все данные которые чел заполнил и отправил с формы\r\n        request.send(formData);\r\n\r\n        // //Для отправки в JSON формате\r\n        // let obj = {};\r\n        // formData.forEach(function (value, key) {\r\n        //     obj[key] = value;\r\n        // });\r\n\r\n        // let lson = JSON.stringify(obj);\r\n        // request.send(lson);\r\n\r\n\r\n\r\n        request.addEventListener('readystatechange', function () { // пишем условия для вывода определенных сообщений\r\n            if (request.readyState < 4) {\r\n                statusMessage.innerHTML = messages.loading;\r\n            } else if (request.readyState === 4 && request.status == 200) {\r\n                statusMessage.innerHTML = messages.seccuss;\r\n            } else {\r\n                statusMessage.innerHTML = messages.failer;\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < input.length; i++) { // обнуляем инпуты\r\n            input[i].value = '';\r\n        }\r\n\r\n\r\n    });\r\n}\r\n\r\nmodule.exports = (forms);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n///////////////////////////////// FORMS     with promise()\r\n\r\n// let messages = { // пишем все сообщения в объект\r\n//     loading: 'Загрузка',\r\n//     seccuss: 'Спасибо!',\r\n//     failer: 'Произошла ошибка'\r\n// };\r\n\r\n// let form = document.querySelector('.main-form'), // находим наши формы и инпуты\r\n//     input = form.getElementsByTagName('input'),\r\n//     statusMessage = document.createElement('div'); //Создаем div для выода сообщений\r\n\r\n// statusMessage.classList.add('status'); // присваиваем новому div класс\r\n\r\n// form.addEventListener('submit', function (event) {\r\n// event.preventDefault();\r\n// form.appendChild(statusMessage);\r\n// let formData = new FormData(form); // оглашаем переменную и помещаем туда все данные которые чел заполнил и отправил с формы\r\n// function postData() {\r\n//     return new Promise(function (resolve, reject) {\r\n//         let request = new XMLHttpRequest();\r\n//         request.open('POST', '/server.php');\r\n//         request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n//         request.addEventListener('readystatechange', function () { // пишем условия для вывода определенных сообщений\r\n//             if (request.readyState < 4) {\r\n//                 resolve();\r\n//             } else if (request.readyState === 4 && request.status == 200) {\r\n//                 resolve();\r\n//             } else {\r\n//                 reject();\r\n//             }\r\n//         });\r\n//         request.send(formData);\r\n//     });\r\n// }\r\n\r\n// function clearInput() {\r\n//     for (let i = 0; i < input.length; i++) { // обнуляем инпуты\r\n//         input[i].value = '';\r\n//     }\r\n// }\r\n\r\n// postData()\r\n//     .then(function () {\r\n//         statusMessage.innerHTML = messages.loading;\r\n//     })\r\n//     .then(function () {\r\n//         statusMessage.innerHTML = messages.seccuss;\r\n//     })\r\n//     .catch(function () {\r\n//         statusMessage.innerHTML = messages.failer;\r\n//     })\r\n//     .then(clearInput);\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n////////////////////////////////////// Шаблон отправки формы\r\n\r\n// let inputRub = document.querySelector('.rub'), // находим наши инпуты\r\n//     inputUsd = document.querySelector('.usd');\r\n\r\n// inputRub.addEventListener('.input', function () {\r\n//     let request = new XMLHttpRequest();\r\n\r\n//     request.open('GET', 'js/current.json');\r\n//     request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n//     request.send();\r\n\r\n//     request.addEventListener('readystatechange', function () {\r\n//         if (request.readyState === 4 && request.status == 200) {\r\n//             let data = JSON.parse(request.response); // помещаем наши данные которые получаем с json файла в новую переменную\r\n//             inputUsd = inputRub.value / data.usd; //  добираемся до щначения на которое нужно делать data.usd\r\n//         } else {\r\n//             inputUsd.value = 'Что-то пошло не так!';\r\n//         }\r\n//     });\r\n\r\n// });\r\n\r\n\r\n","function Slider() {\r\n    // Slider\r\n\r\n    let slideIndex = 1, //находим все объекты с которыми будем работать\r\n        slides = document.querySelectorAll('.slider-item'),\r\n        prev = document.querySelector('.prev'),\r\n        next = document.querySelector('.next'),\r\n        dotsWrap = document.querySelector('.slider-dots'),\r\n        dots = document.querySelectorAll('.dot');\r\n\r\n    showSlides(slideIndex); //вызываем сразу функцию showSlides()\r\n\r\n    function showSlides(n) {\r\n\r\n        if (n > slides.length) { //сначала полне последнего слайда и наоборот\r\n            slideIndex = 1;\r\n        }\r\n        if (n < 1) {\r\n            slideIndex = slides.length;\r\n        }\r\n\r\n        slides.forEach((item) => item.style.display = 'none'); //скрываем все слайды\r\n        // for (let i = 0; i < slides.length; i++) {\r\n        //     slides[i].style.display = 'none';\r\n        // }\r\n        dots.forEach((item) => item.classList.remove('dot-active')); //скрываем класс активности у точек\r\n\r\n        slides[slideIndex - 1].style.display = 'block'; // поскольку slideIndex = 1, то если мы от него отнимем 1 то выходит что мы показываем самый первый слайд\r\n        dots[slideIndex - 1].classList.add('dot-active'); // аналогично но с точками\r\n    }\r\n\r\n    function plusSlides(n) { //перекидываем слайды при клике на стрелки\r\n        showSlides(slideIndex += n);\r\n    }\r\n\r\n    prev.addEventListener('click', function () {\r\n        plusSlides(-1);\r\n    });\r\n\r\n    next.addEventListener('click', function () {\r\n        plusSlides(1);\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    dotsWrap.addEventListener('click', function (event) { // перекидываем слайды при клике на точки\r\n        for (let i = 0; i < dots.length + 1; i++) {\r\n            if (event.target.classList.contains('dot') && event.target == dots[i - 1]) {\r\n                currentSlide(i);\r\n            }\r\n        }\r\n    });\r\n\r\n    function currentSlide(n) {\r\n        showSlides(slideIndex = n);\r\n    }\r\n}\r\n\r\nmodule.exports = (Slider);","function tabs() {\r\n    //                               Создаем табы! !!!!\r\n\r\n    //1. находим все с чем будем работать!\r\n    let tab = document.querySelectorAll('.info-header-tab'),\r\n        info = document.querySelector('.info-header'),\r\n        tabContent = document.querySelectorAll('.info-tabcontent');\r\n\r\n\r\n    //2. пишем функцию, которая будет скрывать все блоки с инфой и картинками\r\n    function hideTabContent(a) {\r\n        for (let i = a; i < tabContent.length; i++) {\r\n            tabContent[i].classList.add('hide');\r\n            tabContent[i].classList.remove('show');\r\n        }\r\n    }\r\n\r\n\r\n    //3. вызываем функцию чтобы по умолчанию первый блок был показан\r\n    hideTabContent(1);\r\n\r\n\r\n    //4. пишем функцию для проявления блоков с инфой и картинками\r\n    function showTabContent(b) {\r\n        if (tabContent[b].classList.contains('hide')) {\r\n            tabContent[b].classList.remove('hide');\r\n            tabContent[b].classList.add('show');\r\n        }\r\n    }\r\n\r\n\r\n    //5. Пишем событие (делегирование) при котором цикл сверяет совпадение кликнутого заглавия с элементом по порядку и соответственно проявляет нужный блок с информацией и картинками\r\n    info.addEventListener('click', function (event) {\r\n        if (event.target && event.target.classList.contains('info-header-tab')) {\r\n            for (let i = 0; i < tab.length; i++) {\r\n                if (event.target == tab[i]) {\r\n                    hideTabContent(0);\r\n                    showTabContent(i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = (tabs);","function timer() {\r\n    //                                 Создаем таймер! !!!! Timer !\r\n\r\n\r\n    // 1. обозначаем дату дедлайна - когда наш таймер должен остановится\r\n    let deadLine = '2022-04-30';\r\n\r\n\r\n\r\n    // 2.пишем функцию - определяем количество милисекунд отнимая от даты детлайна настоящую дату! Все данные возвращаем в массив! При оглашении функции в аргумент endTime  вставляем наш дедлайн deadLine\r\n    function getDataRemain(endTime) {\r\n        let t = Date.parse(endTime) - Date.parse(new Date()),\r\n            seconds = Math.floor((t / 1000) % 60),\r\n            minutes = Math.floor((t / 1000 / 60) % 60),\r\n            hours = Math.floor(t / 1000 / 60 / 60);\r\n\r\n        return {\r\n            'total': t,\r\n            'seconds': seconds,\r\n            'minutes': minutes,\r\n            'hours': hours\r\n        };\r\n    }\r\n\r\n\r\n    // 3. Пишем функцию таймера setClock, где вставляем id блока в котором указаны часы, минуты, секунды и второй аргумент endTime  вставляем наш дедлайн deadLine. Вконце указываем функцию интервал!!\r\n    function setClock(id, endTime) {\r\n        let time = document.getElementById(id),\r\n            hours = time.querySelector('.hours'),\r\n            minutes = time.querySelector('.minutes'),\r\n            seconds = time.querySelector('.seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        function updateClock() { //добвыляем 0 перед числом с одной цифрой\r\n            let t = getDataRemain(endTime);\r\n\r\n            function addZero(num) {\r\n                if (num <= 9) {\r\n                    return '0' + num;\r\n                } else {\r\n                    return num;\r\n                }\r\n            }\r\n            hours.textContent = addZero(t.hours);\r\n            minutes.textContent = addZero(t.minutes);\r\n            seconds.textContent = addZero(t.seconds);\r\n            if (t.total <= 0) { // если дедлайн прошел значит у нас уже нет милисекунд - поэтому просто обнуляем таймер\r\n                clearInterval(timeInterval);\r\n                hours.textContent = '00';\r\n                minutes.textContent = '00';\r\n                seconds.textContent = '00';\r\n            }\r\n        }\r\n    }\r\n    // 4. запускаем функцию  - таймер\r\n    setClock('timer', deadLine);\r\n}\r\n\r\nmodule.exports = (timer);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener('DOMContentLoaded', function () {\r\n\r\n    'use strict';\r\n\r\n    let blocks = require('./parts/blocksOverflow'),\r\n        calkulator = require('./parts/calkulator'),\r\n        forms = require('./parts/forms'),\r\n        Slider = require('./parts/slider'),\r\n        tabs = require('./parts/tabs'),\r\n        timer = require('./parts/timer');\r\n    calkulator();\r\n    blocks();\r\n    forms();\r\n    Slider();\r\n    tabs();\r\n    timer();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n});"],"sourceRoot":""}